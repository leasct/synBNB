security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    # provider == fournisseur de données utilisateurs 
    #ici, on récupere les données a partir de la bdd, dans la table User
    providers:
        users_in_memory: { memory: null }
        in_database:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
    #sécuriser les parties de mon application, ici le formulaire de connexion
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: in_database
                        # provider: users_in_memory
                        
            # la méthode d'authentification choisis, via un formulaire         
            form_login:
                login_path: account_login   # le chemin pour aller a la page de connexion   
                check_path: account_login   # le chemin pour vérifier les info d'authentification   
                  
            logout:
                path: account_logout  # la route pour se logoutgit
                target: account_login  # la route pour se rediriger après 
            
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
